apiVersion: kubekey.kubesphere.io/v1alpha2
kind: Cluster
metadata:
  name: dev
spec:
  hosts:
  - {name: 172.21.106.247, address: 172.21.106.247, internalAddress: 172.21.106.247, port: 22, user: root, password: "1qaz2wsx#EDC"}
  - {name: 172.21.106.248, address: 172.21.106.248, internalAddress: 172.21.106.248, port: 22, user: root, password: "1qaz2wsx#EDC"}
  - {name: 172.21.106.248, address: 172.21.106.248, internalAddress: 172.21.106.248, port: 22, user: root, password: "1qaz2wsx#EDC", arch: arm64}

  roleGroups:
    etcd:
    - 172.21.106.247
    control-plane:
    - 172.21.106.247
    worker:
    - 172.21.106.247
    - 172.21.106.248
  controlPlaneEndpoint:
    ## Internal loadbalancer for apiservers
    # internalLoadbalancer: haproxy
    domain: lb.kubesphere.local
    address: ""
    port: 6443
  kubernetes:
    version: v1.25.16
    proxyMode: iptables
    clusterName: cluster.local
    autoRenewCerts: true
    containerManager: docker
    maxPods: 100
    apiserverArgs:
      - service-node-port-range=1-65535
    kubelet:
      serializeImagePulls: false   # 设置为false允许并行拉取镜像
  etcd:
    type: kubekey
  network:
    plugin: calico
#    calico:
#      ipipMode: Always
#      vxlanMode: Never
#      vethMTU: 1440
    kubePodsCIDR: 10.233.0.0/16
    kubeServiceCIDR: 10.234.0.0/16
#    kubePodsCIDR: 172.16.0.0/16     # 根据主机ip情况错开使用
#    kubeServiceCIDR: 172.17.0.0/16
    ## multus support. https://github.com/k8snetworkplumbingwg/multus-cni
    multusCNI:
      enabled: false
  registry:
    containerdDataDir: /var/lib/containerd
    dockerDataDir: /var/lib/docker
    privateRegistry: ""
    namespaceOverride: ""
    registryMirrors: ["https://docker.1panel.live", "https://hub.rat.dev/", "https://docker.chenby.cn", "https://docker.m.daocloud.io"]
    insecureRegistries: ["docker.oa.com:8080"]
  addons: []